pipeline {
    agent none
    stages {
        stage('get-code') {
            agent { label 'master' }
            steps {
                sh '''
                    whoami
                    hostname
                    echo ${WORKSPACE}
                    echo ${NODE_NAME}
                '''
                git branch: 'develop', url: 'https://github.com/JavierFontecha/unir-p1.4.git'
                stash name: 'code', includes: '**/*'
            }
        }
        stage('static-test') {
            agent { label 'agent1' }
            steps {
                unstash 'code'
                sh '''
                    whoami
                    hostname
                    echo ${WORKSPACE}
                    echo ${NODE_NAME}
                    /usr/bin/python -m flake8 --exit-zero --format=pylint src >flake8.out
                    /usr/bin/python -m bandit --exit-zero -r src -f custom -o bandit.out --msg-template "{abspath}:{line}: [{test_id}] {msg}"
                '''
                recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')]
                recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')]
            }
        }
        stage('sam-deploy') {
            agent { label 'master' }
            steps{
                
                sh '''
                    whoami
                    hostname
                    echo ${WORKSPACE}
                    echo ${NODE_NAME}
                    sam build
                    sam validate --region us-east-1
                    sam deploy --config-file samconfig.toml --config-env staging --resolve-s3 --no-fail-on-empty-changeset
                '''
            }
        }
        
        stage('rest-test') {
            agent { label 'agent2' }
            steps{
                unstash 'code'
                sh'''
                    whoami
                    hostname
                    echo ${WORKSPACE}
                    echo ${NODE_NAME}
                    export BASE_URL=$(aws cloudformation describe-stacks --stack-name todo-list-aws-staging --query "Stacks[0].Outputs[?OutputKey=='BaseUrlApi'].OutputValue" --output text)
                    /usr/bin/python -m pytest test/integration/todoApiTest.py -v
                '''
            }
        }
        
        stage('promote') {
            agent { label 'master' }
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'githubtoken', 
                                                     usernameVariable: 'GITHUB_USER', 
                                                     passwordVariable: 'GITHUB_PASS')]) {
                        sh '''
                            whoami
                            hostname
                            echo ${WORKSPACE}
                            echo ${NODE_NAME}
                            git checkout master
                            git merge develop
                            git push https://$GITHUB_USER:$GITHUB_PASS@github.com/JavierFontecha/unir-p1.4.git
                        '''
                    }
                }
            }
        }
    }
    post {
        always {
            node('master') {
                cleanWs()
            }
            node('agent1') {
                cleanWs()
            }
            node('agent2') {
                cleanWs()
            }
        }
    }
}